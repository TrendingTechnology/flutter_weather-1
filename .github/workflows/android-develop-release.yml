name: Android Develop Release

on:
  push: 
    branches: 
      - develop

  pull_request: 
    branches: 
      - develop

jobs: 
  version:
    name: "Generate Version Number"
    runs-on: ubuntu-latest
    steps:
      - 
        uses: actions/checkout@v2
      - 
        name: "Fetch all history for all tags and branches"
        run: git fetch --prune --depth=10000
      - 
        name: "Install GitVersion"
        uses: gittools/actions/gitversion/setup@v0.9.5
        with:
            versionSpec: '5.x'
      - 
        name: "Use GitVersion"
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.5
      - 
        name: "Create version.txt with nuGetVersion"
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > apps/mobile_flutter/version.txt
      - 
        name: "Upload version.txt"
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: apps/mobile_flutter/version.txt

  build: 
    name: "Build & Release Android"
    needs: [ version ]
    runs-on: ubuntu-latest
    steps: 
      - 
        uses: actions/checkout@v1
      - 
        uses: actions/setup-java@v1
        with: 
          java-version: 12.x
      - 
        uses: subosito/flutter-action@v1
        with: 
          channel: stable
          flutter-version: "1.22.5"
      - 
        env: 
          FLUTTER_WEATHER_LOCAL_SECRET: "${{ secrets.FLUTTER_WEATHER_LOCAL_SECRET }}"
        name: "Decode android local.properties"
        run: "echo $FLUTTER_WEATHER_DEV_LOCAL_SECRET > apps/mobile_flutter/android/local.properties"
      - 
        env: 
          FLUTTER_WEATHER_KEY_SECRET: "${{ secrets.FLUTTER_WEATHER_KEY_SECRET }}"
        name: "Decode android key.properties"
        run: "echo $FLUTTER_WEATHER_KEY_SECRET > apps/mobile_flutter/android/key.properties"
      - 
        env: 
          FLUTTER_WEATHER_KEYSTORE: "${{ secrets.FLUTTER_WEATHER_KEYSTORE }}"
        name: "Decode android keystore"
        run: "echo $FLUTTER_WEATHER_KEYSTORE > apps/mobile_flutter/android/app/key.jks.asc"
      - 
        name: "Authenticate with keystore"
        run: "gpg -d --passphrase ${{ secrets.KEYSTORE_KEY_PASS }} --batch apps/mobile_flutter/android/app/key.jks.asc > apps/mobile_flutter/android/app/key.jks"
      - 
        env: 
          FLUTTER_WEATHER_DEV_ENV_CONFIG_SECRET: "${{ secrets.FLUTTER_WEATHER_ENV_CONFIG_SECRET }}"
        name: "Decode environment config"
        run: "echo $FLUTTER_WEATHER_DEV_ENV_CONFIG_SECRET > apps/mobile_flutter/lib/env_config.dart"
      - 
        name: "Get version.txt"
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - 
        name: "Read version"
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - 
        name: "Update version in pubspec.yaml"
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' apps/mobile_flutter/pubspec.yaml
      - 
        name: "Update version in sonar-project.properties"
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' apps/mobile_flutter/sonar-project.properties
      - 
        name: "Update version in local.properties"
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' apps/mobile_flutter/android/local.properties
      - 
        name: "Update version in env_config.dart"
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' apps/mobile_flutter/lib/env_config.dart
      - 
        name: "Update KeyStore password in gradle properties"
        run: sed -i 's/#{KEYSTORE_PASS}#/${{ secrets.KEYSTORE_PASS }}/g' apps/mobile_flutter/android/key.properties
      - 
        name: "Update KeyStore key password in gradle properties"
        run: sed -i 's/#{KEYSTORE_KEY_PASS}#/${{ secrets.KEYSTORE_KEY_PASS }}/g' apps/mobile_flutter/android/key.properties
      - 
        name: "Flutter get"
        working-directory: "./apps/mobile_flutter"
        run: "flutter pub get"
      - 
        name: "Flutter test"
        working-directory: "./apps/mobile_flutter"
        run: "flutter test"
      - 
        name: "Flutter build dev"
        working-directory: "./apps/mobile_flutter"
        run: "flutter build appbundle -t lib/main_prod.dart --flavor prod --release --verbose"
#      - 
#        name: "Create a Release in GitHub"
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab"
#          token: ${{ secrets.GH_TOKEN }}
#          tag: ${{ steps.version.outputs.content }}
#          commit: ${{ github.sha }}
#          prerelease: true